<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Redox - Your Next(Gen) OS</title>
    <link>http://www.redox-os.org/</link>
    <description>Recent content on Redox - Your Next(Gen) OS</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 30 Oct 2015 17:01:00 +0200</lastBuildDate>
    <atom:link href="http://www.redox-os.org/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>This Week in Redox 4</title>
      <link>http://www.redox-os.org/news/this-week-in-redox-4/</link>
      <pubDate>Fri, 30 Oct 2015 17:01:00 +0200</pubDate>
      
      <guid>http://www.redox-os.org/news/this-week-in-redox-4/</guid>
      <description>

&lt;p&gt;This is the fourth post of a series of blog posts tracking the development and progress of Redox, the Rust operating system. If you want to know more about Redox in general, then visit our &lt;a href=&#34;https://github.com/redox-os/redox&#34;&gt;Github page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(written by Ticki)&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&#34;what-s-new-in-redox:897b056dc9d15b1cc7e94e257f49caa8&#34;&gt;What&amp;rsquo;s new in Redox?&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/jackpot51&#34;&gt;@jackpot51&lt;/a&gt; with the help of others SDL, dosbox, zlib, libpng, libiconv and freeciv is ported. Following are either almost ported or partially ported: gcc, newlib and binutils.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/ticki&#34;&gt;@ticki&lt;/a&gt; Redox boots 10-20% faster, due to rewriting of parts in the kernel. This speedup mainly comes from rewriting the path parser and the URL parser.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/nounoursheureux&#34;&gt;@nounoursheureux&lt;/a&gt; have added a event triggered on quits of programs.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/ticki&#34;&gt;@ticki&lt;/a&gt; has maked the URLs syntax agnostic, so now everything after the &lt;code&gt;:&lt;/code&gt; is left to the provider.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/nobbz&#34;&gt;@nobbz&lt;/a&gt; have been asked by his professor to give a ten minute talk about Redox.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Sodium (text editor) has lots of new features. Thanks, &lt;a href=&#34;https://github.com/stratact&#34;&gt;@stratact&lt;/a&gt;, for helping out with the bug fixes.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/achanda&#34;&gt;@achanda&lt;/a&gt;, &lt;a href=&#34;https://github.com/stratact&#34;&gt;@stratact&lt;/a&gt;, and &lt;a href=&#34;https://github.com/ticki&#34;&gt;@ticki&lt;/a&gt; have cleaned up the warnings, codestyle and done some refactoring in the kernel.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/lazyoxen&#34;&gt;@lazyoxen&lt;/a&gt; has switched from using a four byte array to represent colors to a Color struct in &lt;code&gt;libredox&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;what-does-it-look-like:897b056dc9d15b1cc7e94e257f49caa8&#34;&gt;What does it look like?&lt;/h1&gt;

&lt;p&gt;;)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/redox-os/redox/master/img/fun/cellphone.jpg&#34; alt=&#34;Cellphone&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;The start screen:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Ticki/redox/master/img/screenshots/start.png&#34; alt=&#34;Startscreen&#34; /&gt;
&lt;/p&gt;

&lt;h1 id=&#34;what-s-next:897b056dc9d15b1cc7e94e257f49caa8&#34;&gt;What&amp;rsquo;s next?&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Port stuff&lt;/li&gt;
&lt;li&gt;Finish x86_64 support (it compiles!).&lt;/li&gt;
&lt;li&gt;Extend Sodium.&lt;/li&gt;
&lt;li&gt;Extend Orbital.&lt;/li&gt;
&lt;li&gt;ZFS scheme and write support&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;contributors:897b056dc9d15b1cc7e94e257f49caa8&#34;&gt;Contributors&lt;/h1&gt;

&lt;p&gt;(sorted like &lt;code&gt;Contributors&lt;/code&gt; section on Github)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;jackpot51&lt;/li&gt;
&lt;li&gt;ticki&lt;/li&gt;
&lt;li&gt;stratact&lt;/li&gt;
&lt;li&gt;tedsta&lt;/li&gt;
&lt;li&gt;esell&lt;/li&gt;
&lt;li&gt;achanda&lt;/li&gt;
&lt;li&gt;nobbz&lt;/li&gt;
&lt;li&gt;lazyoxen&lt;/li&gt;
&lt;li&gt;ambaxter&lt;/li&gt;
&lt;li&gt;stryan&lt;/li&gt;
&lt;li&gt;mgattozzi&lt;/li&gt;
&lt;li&gt;layered-esell&lt;/li&gt;
&lt;li&gt;bheesham&lt;/li&gt;
&lt;li&gt;hauleth&lt;/li&gt;
&lt;li&gt;remram44&lt;/li&gt;
&lt;li&gt;shadowcreator&lt;/li&gt;
&lt;li&gt;n3mes1s&lt;/li&gt;
&lt;li&gt;flashyoshi&lt;/li&gt;
&lt;li&gt;nounoursheureux&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>This Week in Redox 3</title>
      <link>http://www.redox-os.org/news/this-week-in-redox-3/</link>
      <pubDate>Thu, 22 Oct 2015 22:05:00 +0200</pubDate>
      
      <guid>http://www.redox-os.org/news/this-week-in-redox-3/</guid>
      <description>

&lt;p&gt;This is the third post of a series of blog posts tracking the development and progress of Redox, the Rust operating system. If you want to know more about Redox in general, then visit our &lt;a href=&#34;https://github.com/redox-os/redox&#34;&gt;Github page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(written by Ticki)&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&#34;what-s-new-in-redox:c4f8a7f0791cf2b6ad34649b88cc271b&#34;&gt;What&amp;rsquo;s new in Redox?&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/jackpot51&#34;&gt;@jackpot51&lt;/a&gt; et al. x86_64 is almost supported, despite the lack of a naked function attribute in Rust. See the recent PR to Rust and RFC discussions for more information.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/stratact&#34;&gt;@stratact&lt;/a&gt; have upgraded the file manager to include more info about files. This includes file sizes and number of entries in folder.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/ticki&#34;&gt;@ticki&lt;/a&gt; with the help of &lt;a href=&#34;https://github.com/stratact&#34;&gt;@stratact&lt;/a&gt;, and &lt;a href=&#34;https://github.com/tennix&#34;&gt;@tennix&lt;/a&gt; has started the development of Redox&amp;rsquo;s own advanced, Vi-like text editor, Sodium (&lt;code&gt;na&lt;/code&gt; for short). The recent enchancement of the basic text editor (named &lt;code&gt;Editor&lt;/code&gt;) were rolled back in favor of Sodium. These features will then gradually be added to Sodium.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/tedsta&#34;&gt;@tedsta&lt;/a&gt; is working hard on completing the support for ZFS. Check out the ZFS application for trying it out!&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The graphics module now support Bresenham line drawing natively.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/ticki&#34;&gt;@ticki&lt;/a&gt; has ported &lt;code&gt;libnum&lt;/code&gt;. This makes us able to port &lt;code&gt;liboctavo&lt;/code&gt; in the near future, meaning that we can move on with the development of &lt;code&gt;Oxide&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/jackpot51&#34;&gt;@jackpot51&lt;/a&gt; has moved different crates out of kernel space and into user space. Futhermore the folder containing the kernel code is now called &lt;code&gt;kernel&lt;/code&gt; instead of &lt;code&gt;src&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/nobbz&#34;&gt;@nobbz&lt;/a&gt; Redox is now building on Windows.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;what-does-it-look-like:c4f8a7f0791cf2b6ad34649b88cc271b&#34;&gt;What does it look like?&lt;/h1&gt;

&lt;p&gt;;)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/redox-os/redox/master/img/fun/Old.jpg&#34; alt=&#34;Old computer&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;The start screen:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Ticki/redox/master/img/screenshots/start.png&#34; alt=&#34;Startscreen&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Sodium is working:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Ticki/redox/4d026acf5e7981cd3a3d12a55206dfd20853fcde/img/screenshots/Sodium.png&#34; alt=&#34;Sodium&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;WIP on ZFS:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Ticki/redox/master/img/screenshots/zfs.png&#34; alt=&#34;ZFS&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Awesome file manager!&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Ticki/redox/master/img/screenshots/File_manager_v2.png&#34; alt=&#34;File manager&#34; /&gt;
&lt;/p&gt;

&lt;h1 id=&#34;what-s-next:c4f8a7f0791cf2b6ad34649b88cc271b&#34;&gt;What&amp;rsquo;s next?&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Finish x86_64 support.&lt;/li&gt;
&lt;li&gt;Greatly extend Sodium.&lt;/li&gt;
&lt;li&gt;Do more work on Bohr (the display manager).&lt;/li&gt;
&lt;li&gt;Create an RFC-like system.&lt;/li&gt;
&lt;li&gt;Extend Orbital.&lt;/li&gt;
&lt;li&gt;Create a GUI library (high-level library with Orbital as back-end).&lt;/li&gt;
&lt;li&gt;Port &lt;code&gt;liboctavo&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;ZFS scheme and write support&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;contributors:c4f8a7f0791cf2b6ad34649b88cc271b&#34;&gt;Contributors&lt;/h1&gt;

&lt;p&gt;(sorted like &lt;code&gt;Contributors&lt;/code&gt; section on Github)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;jackpot51&lt;/li&gt;
&lt;li&gt;ticki&lt;/li&gt;
&lt;li&gt;stratact&lt;/li&gt;
&lt;li&gt;tedsta&lt;/li&gt;
&lt;li&gt;esell&lt;/li&gt;
&lt;li&gt;nobbz&lt;/li&gt;
&lt;li&gt;stryan&lt;/li&gt;
&lt;li&gt;ambaxter&lt;/li&gt;
&lt;li&gt;mgattozzi&lt;/li&gt;
&lt;li&gt;lazyoxen&lt;/li&gt;
&lt;li&gt;hauleth&lt;/li&gt;
&lt;li&gt;layered-esell&lt;/li&gt;
&lt;li&gt;shadowcreator&lt;/li&gt;
&lt;li&gt;flashyoshi&lt;/li&gt;
&lt;li&gt;achanda&lt;/li&gt;
&lt;li&gt;remram44&lt;/li&gt;
&lt;li&gt;n3mes1s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>This Week in Redox 2</title>
      <link>http://www.redox-os.org/news/this-week-in-redox-2/</link>
      <pubDate>Wed, 14 Oct 2015 19:30:51 +0200</pubDate>
      
      <guid>http://www.redox-os.org/news/this-week-in-redox-2/</guid>
      <description>

&lt;h1 id=&#34;whats-new-in-redox:8d87b7b6fc651d2b1a5b3749435c6a4f&#34;&gt;Whats new in Redox?&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&amp;amp;str == redox String cleanup&lt;/li&gt;
&lt;li&gt;Add Bresenham&amp;rsquo;s line drawing algorithm&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;box_write&lt;/code&gt; command in &lt;code&gt;filesystem/apps/test/test.rs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;wget&lt;/code&gt; command&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;write&lt;/code&gt; trait&lt;/li&gt;
&lt;li&gt;Add leak test for &lt;code&gt;test.rs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add second wallpaper/bootscreen image&lt;/li&gt;
&lt;li&gt;Add temporary rsa implementation&lt;/li&gt;
&lt;li&gt;Add user scheme example&lt;/li&gt;
&lt;li&gt;Added Fedora build instructions.&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;dnode,&lt;/code&gt; object set, and &lt;code&gt;zil&lt;/code&gt; header&lt;/li&gt;
&lt;li&gt;Changed Fedora setup instructions to use &lt;code&gt;dnf&lt;/code&gt; instead of &lt;code&gt;yum&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Document the rest of &lt;code&gt;libredox&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Documentation of the schemes module&lt;/li&gt;
&lt;li&gt;Dup fork clone exec&lt;/li&gt;
&lt;li&gt;Formatize more &lt;code&gt;&amp;amp;str.to_string&lt;/code&gt; concats&lt;/li&gt;
&lt;li&gt;Got &lt;code&gt;NvPairs&lt;/code&gt; XDR decoding working&lt;/li&gt;
&lt;li&gt;Hacky way to read ZFS files&lt;/li&gt;
&lt;li&gt;Indexize &lt;code&gt;Memory&lt;/code&gt; and use &lt;code&gt;Memory&lt;/code&gt; in &lt;code&gt;uhci&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Initial &lt;code&gt;ion&lt;/code&gt; commit&lt;/li&gt;
&lt;li&gt;LZJB compression for ZFS&lt;/li&gt;
&lt;li&gt;Manual &lt;code&gt;Debug&lt;/code&gt; workaround for &lt;code&gt;NvList&lt;/code&gt; and &lt;code&gt;NvValue&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;More &lt;code&gt;Memory&lt;/code&gt;ifying and import cleanup&lt;/li&gt;
&lt;li&gt;More progress toward reading a file&lt;/li&gt;
&lt;li&gt;Move kvec.rs to vec.rs and use &lt;code&gt;Memory&lt;/code&gt; where possible&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NvList&lt;/code&gt; Serialization&lt;/li&gt;
&lt;li&gt;Opening Programs from the UI Bar Change&lt;/li&gt;
&lt;li&gt;Playing with the test app&lt;/li&gt;
&lt;li&gt;Progress on nvpairs and XDR&lt;/li&gt;
&lt;li&gt;Remove &lt;code&gt;Option::&lt;/code&gt; namespacing and remove some leftover whitespace&lt;/li&gt;
&lt;li&gt;Removed debug prints in &lt;code&gt;NvPairs&lt;/code&gt; decoding in ZFS&lt;/li&gt;
&lt;li&gt;Rename &lt;code&gt;BMP&lt;/code&gt; to &lt;code&gt;BMPFile&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start Neon, a permission model.&lt;/li&gt;
&lt;li&gt;Starting to read ZAP objects&lt;/li&gt;
&lt;li&gt;Undo &lt;code&gt;format!&lt;/code&gt;ing and borrow slices instead of &lt;code&gt;Vec&lt;/code&gt;s&lt;/li&gt;
&lt;li&gt;Use LZJB compression to read the MOS &lt;code&gt;meta_dnode&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Userspace networking&lt;/li&gt;
&lt;li&gt;ZFS read support&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ls&lt;/code&gt; command for ZFS&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;what-does-it-look-like:8d87b7b6fc651d2b1a5b3749435c6a4f&#34;&gt;What does it look like?&lt;/h1&gt;

&lt;p&gt;The desktop.
&lt;img src=&#34;https://raw.githubusercontent.com/redox-os/redox/e3a2abf42dfad8875642156fee476351153e7ce8/img/screenshots/Desktop.png&#34; alt=&#34;Redox&#34; /&gt;

Yay! Fancy opacity.
&lt;img src=&#34;https://raw.githubusercontent.com/redox-os/redox/e3a2abf42dfad8875642156fee476351153e7ce8/img/screenshots/Fancy_opacity.png&#34; alt=&#34;Redox&#34; /&gt;

We have a file manager!
&lt;img src=&#34;https://raw.githubusercontent.com/redox-os/redox/e3a2abf42dfad8875642156fee476351153e7ce8/img/screenshots/File_manager.png&#34; alt=&#34;Redox&#34; /&gt;

The boot screen.
&lt;img src=&#34;https://raw.githubusercontent.com/redox-os/redox/e3a2abf42dfad8875642156fee476351153e7ce8/img/screenshots/Boot.png&#34; alt=&#34;Redox&#34; /&gt;
&lt;/p&gt;

&lt;h1 id=&#34;what-next:8d87b7b6fc651d2b1a5b3749435c6a4f&#34;&gt;What next?&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Continue on &lt;code&gt;x86_64&lt;/code&gt; support&lt;/li&gt;
&lt;li&gt;Create design documents for Ion&lt;/li&gt;
&lt;li&gt;Create design documents for Oxide&lt;/li&gt;
&lt;li&gt;Discuss development infrastructure&lt;/li&gt;
&lt;li&gt;Move things out of the kernel&lt;/li&gt;
&lt;li&gt;Link a userspace allocator to libredox&lt;/li&gt;
&lt;li&gt;Get kernel strings to support UTF-8 with &lt;code&gt;Vec&amp;lt;u8&amp;gt;&lt;/code&gt; instead of UTF-32 with &lt;code&gt;Vec&amp;lt;char&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;contributors:8d87b7b6fc651d2b1a5b3749435c6a4f&#34;&gt;Contributors&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Abhishek Chanda &lt;a href=&#34;mailto:abhishek.chanda@emc.com&#34;&gt;abhishek.chanda@emc.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Adam Baxter &lt;a href=&#34;mailto:ambaxter@users.noreply.github.com&#34;&gt;ambaxter@users.noreply.github.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ben Elliott &lt;a href=&#34;mailto:belliott@schemagames.com&#34;&gt;belliott@schemagames.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jeremy Soller &lt;a href=&#34;mailto:jackpot51@gmail.com&#34;&gt;jackpot51@gmail.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Liam Wigney &lt;a href=&#34;mailto:ShadowCreator@users.noreply.github.com&#34;&gt;ShadowCreator@users.noreply.github.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Remi Rampin &lt;a href=&#34;mailto:remirampin@gmail.com&#34;&gt;remirampin@gmail.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;stratact &lt;a href=&#34;mailto:stratact1@gmail.com&#34;&gt;stratact1@gmail.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Theodore DeRego &lt;a href=&#34;mailto:tderego94@gmail.com&#34;&gt;tderego94@gmail.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ticki &lt;a href=&#34;mailto:Ticki@users.noreply.github.com&#34;&gt;Ticki@users.noreply.github.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Titouan Vervack &lt;a href=&#34;mailto:tivervac@gmail.com&#34;&gt;tivervac@gmail.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>fired - fast init system</title>
      <link>http://www.redox-os.org/blog/fired-fast-init-system/</link>
      <pubDate>Tue, 06 Oct 2015 16:42:56 +0200</pubDate>
      
      <guid>http://www.redox-os.org/blog/fired-fast-init-system/</guid>
      <description>

&lt;p&gt;&lt;code&gt;fired&lt;/code&gt; is brand new init system created for Redox OS. It should provide easy
way to run, manage and supervise all processes inside Redox.&lt;/p&gt;

&lt;h2 id=&#34;design-principles:bd458ca17a8a070d9765d0bc1efcfcbf&#34;&gt;Design principles&lt;/h2&gt;

&lt;p&gt;Main design principles are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Learn from other init systems what to do:

&lt;ul&gt;
&lt;li&gt;simple and readable configuration files instead of bloated shell scripts (we
want to use &lt;a href=&#34;https://github.com/toml-lang/toml&#34;&gt;Toml&lt;/a&gt; as configuration language)&lt;/li&gt;
&lt;li&gt;keep PID 1 minimal as possible&lt;/li&gt;
&lt;li&gt;run services in parallel&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Learn from other init systems what not to do

&lt;ul&gt;
&lt;li&gt;be *NIX way, make one thing and do it good&lt;/li&gt;
&lt;li&gt;depend on kernel only&lt;/li&gt;
&lt;li&gt;do not bind to &amp;ldquo;only one true&amp;rdquo; libc&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of the features will be possible due to unique Redox design principle that
&lt;a href=&#34;https://github.com/redox-os/redox/wiki/URL&#34;&gt;everything is an URL&lt;/a&gt;. Thanks to that principle logging will be done via
&lt;code&gt;log://&lt;/code&gt; URL that will be easy readable by any log aggregating tool that one
wants, deaemons will provide their status via &lt;code&gt;bus://&lt;/code&gt; URL (or similar, design
process is still on the go), etc. On the other hand it will make &lt;code&gt;fired&lt;/code&gt; much
harder to port to other *NIX platforms, although we will be really happy to see
if there is someone who will help us creating that possible.&lt;/p&gt;

&lt;h2 id=&#34;why-not-existing-one:bd458ca17a8a070d9765d0bc1efcfcbf&#34;&gt;Why not existing one?&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;We are writing Redox kernel in Rust, so why we should use C in user space? We
want all system tooling to be as safe as possible in Rust.&lt;/li&gt;
&lt;li&gt;All existing init systems are write for systems with other design principles.
In Redox everything is URL so we should use that. Instead of sockets/pipes
magic we have built in tool that will solve all problems with IPC.&lt;/li&gt;
&lt;li&gt;Nothing what we found is simple enough or modern enough to fit into our needs.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>This Week in Redox 1</title>
      <link>http://www.redox-os.org/news/this-week-in-redox-1/</link>
      <pubDate>Tue, 06 Oct 2015 16:42:56 +0200</pubDate>
      
      <guid>http://www.redox-os.org/news/this-week-in-redox-1/</guid>
      <description>

&lt;p&gt;This is the first post in a blog serie tracking the development and progress of Redox, the modular and secure OS, written in Rust. So welcome!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(written by Ticki)&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&#34;what-s-new-in-redox:b35c6d2f7cbc962c1c14b032f4de0e78&#34;&gt;What&amp;rsquo;s new in Redox?&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;The development of Redox&amp;rsquo;s package manager, Oxide (&lt;code&gt;ox&lt;/code&gt; for short), is started. The source for Oxide can be found &lt;a href=&#34;https://github.com/redox-os/oxide&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jackpot51&#34;&gt;@jackpot51&lt;/a&gt;, &lt;a href=&#34;https://github.com/stratact&#34;&gt;@stratact&lt;/a&gt;, and &lt;a href=&#34;https://github.com/tedsta&#34;&gt;@tedsta&lt;/a&gt; has started implementing support for ZFS, which is planned to be the main file system used in Redox.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ticki&#34;&gt;@ticki&lt;/a&gt; has made an icon for Redox (see screenshots).&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hauleth&#34;&gt;@hauleth&lt;/a&gt; has set a cool website up, using &lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ticki&#34;&gt;@ticki&lt;/a&gt; has cleaned up the style in the whole codebase.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/esell&#34;&gt;@esell&lt;/a&gt; has cargoified a lot of crates in the main repository.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/stryan&#34;&gt;@stryan&lt;/a&gt; and &lt;a href=&#34;https://github.com/jackpot51&#34;&gt;@jackpot51&lt;/a&gt;, the window manager is moved to libredox, under the name &lt;code&gt;orbital&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;what-does-it-look-like:b35c6d2f7cbc962c1c14b032f4de0e78&#34;&gt;What does it look like?&lt;/h1&gt;

&lt;p&gt;The desktop.
&lt;img src=&#34;https://raw.githubusercontent.com/redox-os/redox/master/img/screenshots/Desktop.png&#34; alt=&#34;Redox&#34; /&gt;

Yay! Fancy opacity.
&lt;img src=&#34;https://raw.githubusercontent.com/redox-os/redox/master/img/screenshots/Fancy_opacity.png&#34; alt=&#34;Redox&#34; /&gt;

We have a file manager!
&lt;img src=&#34;https://raw.githubusercontent.com/redox-os/redox/master/img/screenshots/File_manager.png&#34; alt=&#34;Redox&#34; /&gt;

The boot screen.
&lt;img src=&#34;https://raw.githubusercontent.com/redox-os/redox/master/img/screenshots/Boot.png&#34; alt=&#34;Redox&#34; /&gt;
&lt;/p&gt;

&lt;h1 id=&#34;what-next:b35c6d2f7cbc962c1c14b032f4de0e78&#34;&gt;What next?&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Moving many functions out of the kernel/libredox. For example, we plan to move orbital out of libredox.&lt;/li&gt;
&lt;li&gt;Porting libstd completely. Many of the libstd functionalities are provided by the &lt;code&gt;common&lt;/code&gt; module right now. However, we would like to port libstd to provide support for other crates.&lt;/li&gt;
&lt;li&gt;Adding signatures, hashes, and other crypto stuff to the Oxide package manager.&lt;/li&gt;
&lt;li&gt;Improving documentation.&lt;/li&gt;
&lt;li&gt;Starting a shell (rash).&lt;/li&gt;
&lt;li&gt;Make Redox support 64-bit system.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And lots of lots of lots of other stuff.&lt;/p&gt;

&lt;h1 id=&#34;contributors:b35c6d2f7cbc962c1c14b032f4de0e78&#34;&gt;Contributors&lt;/h1&gt;

&lt;p&gt;(fetched from &lt;code&gt;Contributors&lt;/code&gt; section on Github)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;jackpot51&lt;/li&gt;
&lt;li&gt;ticki&lt;/li&gt;
&lt;li&gt;stratact&lt;/li&gt;
&lt;li&gt;esell&lt;/li&gt;
&lt;li&gt;stryan&lt;/li&gt;
&lt;li&gt;tedsta&lt;/li&gt;
&lt;li&gt;layered-esell&lt;/li&gt;
&lt;li&gt;hauleth&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>And So It Begins…</title>
      <link>http://www.redox-os.org/blog/hello-world/</link>
      <pubDate>Sat, 12 Sep 2015 18:11:35 +0200</pubDate>
      
      <guid>http://www.redox-os.org/blog/hello-world/</guid>
      <description>&lt;p&gt;Redox development has been a long and arduous process, spanning several months
of breaking things until they are fixed.&lt;/p&gt;

&lt;p&gt;On came the compiler errors, which meant the kernel had to be linked as an ELF
file, because the compiler had moved other functions above the entry function,
and SSE had to be disabled to prevent aligned memory operations from being done
on the stack pointer, because the compiler had decided to do that too. Some bugs
went away after completely unrelated lines of code were changed, which led
the compiler to make different optimization decisions. Most compiler
optimizations had to be disabled, and a custom link script used to avoid
compiler errors.&lt;/p&gt;

&lt;p&gt;There was the transition to real hardware, and with it the realization that very
few virtualization platforms implement the hardware faithfully, and very few
manufacturer specifications are complete and correct. Sometimes the only
reference for the &amp;lsquo;correct&amp;rsquo; way of doing things is deep in the Linux source
code. Often, device drivers would work on Qemu, but not VirtualBox, or on
VirtualBox, but not real hardware.&lt;/p&gt;

&lt;p&gt;Also, there was a discovery of bugs in critical areas, the IDE driver,
the realloc function, the URL object, the list goes on. Discovery of these
requires a complete understanding of the Redox source, and an investigation
of the disassembly of the entire kernel, instruction by instruction. Some bugs
disappeared when debugging output was added, the side effects of debugging only
being different timing of instructions.&lt;/p&gt;

&lt;p&gt;This blog is to chart the journey of discovery and rediscovery on my path of
developing Redox, a Rust operating system. Most posts will be about new
progress, some will be old anecdotes. All will be focused on demonstrating
the plight of the not-so-humble operating system developer, who is often too far
buried in principle or ego to discover their mistakes, or to replace them with
sometimes compromising solutions.&lt;/p&gt;

&lt;p&gt;In the end, I hope to develop something that proves that Rust can be
a full-stack solution, from operating system to device drivers to user
applications, or fail spectacularly at doing so. What I have made already
supports some of these goals, with an X11-like windowing system, a VFS based
filesystem and network stack, and ELF file loading and virtual memory management
for user programs.&lt;/p&gt;

&lt;p&gt;I hope you enjoy this as much as I do,&lt;/p&gt;

&lt;p&gt;Jeremy Soller&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Redox way</title>
      <link>http://www.redox-os.org/manifesto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.redox-os.org/manifesto/</guid>
      <description>

&lt;p&gt;Idealism, ego, and narcissism are often ingredients constructing
the not-so-humble OS developer. A short study of Linus Torvalds&amp;rsquo; public comments
is one of the recommended curriculum when attempting to divine the true
motivations of someone who would decide to defenestrate other extensively used,
widely documented, and extremely inexpensive Operating Systems in favor
of reinventing the wheel (we need more spokes in userspace!).&lt;/p&gt;

&lt;p&gt;All that aside, I realize the importance of a project as large as this to define
some rationale for its existence, and some vision for its future.&lt;/p&gt;

&lt;p&gt;To start, perhaps a riddle:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What is black and blue, but never true?&lt;/li&gt;
&lt;li&gt;What is red and green, but cannot be seen?&lt;/li&gt;
&lt;li&gt;What is orange and yellow, but not so mellow?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I don&amp;rsquo;t actually have an answer to that one, so good luck.&lt;/p&gt;

&lt;p&gt;There is a question I do have an answer to, though:&lt;/p&gt;

&lt;h2 id=&#34;what-is-redox:5891c44005928acbbb7fd1868bbfb3f4&#34;&gt;What is Redox?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Redox is an operating system.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Redox is written mostly in Rust&lt;/strong&gt;, with a few x86 assembler files in
the bootloader and protected mode initialization. There is inline assembly
to deal with system calls, port access, and virtual memory, but it is very
succinct.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Redox embraces Unix philosophy&lt;/strong&gt;, where many interfaces are accessible in
the virtual filesystem, the binary interface is lightweight and portable,
and text files are used for configuration.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Redox prioritizes the User.&lt;/strong&gt; Safety is the most important innovation of Rust,
and Redox is attempting to use that innovation to provide a more stable
and secure experience without compromising user experience. Programs and drivers
are sandboxed, and the user is left in the highest privilege position.&lt;/p&gt;

&lt;p&gt;This page will be updated to further explain the foundational principles of
Redox, once I have finished writing some code.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>